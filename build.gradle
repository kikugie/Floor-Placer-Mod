plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url "https://masa.dy.fi/maven" }
}

fabricApi {
	configureDataGeneration()
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// litematica stuff
	implementation 'net.sandrohc:schematic4j:1.1.0'

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Carpet Mod
	modImplementation "carpet:fabric-carpet:${project.carpet_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	// Include the LICENSE file and rename it
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}" }
	}
}


// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {

	}
}

configurations {
	provided
	// Make compile extend from our provided configuration so that things added to bundled end up on the compile classpath
	compile.extendsFrom(provided)
}

dependencies {
	// implementation 'net.sandrohc:schematic4j:1.1.0'
	provided group: 'net.sandrohc', name: 'schematic4j', version: '1.1.0'
}

jar {
	// Include all of the jars from the bundled configuration in our jar
	from configurations.provided.asFileTree.files.collect { zipTree(it) }
}
